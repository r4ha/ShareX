<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - タスクの設定</value>
  </data>
  <data name="btnActionsAdd.Text" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="btnActionsDuplicate.Text" xml:space="preserve">
    <value>複製</value>
  </data>
  <data name="btnActionsEdit.Text" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="btnActionsRemove.Text" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="btnAfterCapture.Text" xml:space="preserve">
    <value>キャプチャ後...</value>
  </data>
  <data name="btnAfterUpload.Text" xml:space="preserve">
    <value>アップロード後...</value>
  </data>
  <data name="btnDestinations.Text" xml:space="preserve">
    <value>アップロード先...</value>
  </data>
  <data name="btnImageEffects.Text" xml:space="preserve">
    <value>画像効果の設定...</value>
  </data>
  <data name="btnResetAutoIncrementNumber.Text" xml:space="preserve">
    <value>自動インクリメントカウンタの初期化</value>
  </data>
  <data name="btnScreenRecorderFFmpegOptions.Text" xml:space="preserve">
    <value>FFmpegの設定...</value>
  </data>
  <data name="btnTask.Text" xml:space="preserve">
    <value>タスク...</value>
  </data>
  <data name="btnWatchFolderAdd.Text" xml:space="preserve">
    <value>追加...</value>
  </data>
  <data name="btnWatchFolderRemove.Text" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="cbCaptureAutoHideTaskbar.Text" xml:space="preserve">
    <value>キャプチャ中のウィンドウのタスクバーに触れると、タスクバーを隠す</value>
  </data>
  <data name="cbCaptureClientArea.Text" xml:space="preserve">
    <value>ウィンドウをキャプチャする時、タイトルバーや境界は除外する</value>
  </data>
  <data name="cbCaptureShadow.Text" xml:space="preserve">
    <value>ウィンドウを影付きでキャプチャ (透明度が必要)する</value>
  </data>
  <data name="cbCaptureTransparent.Text" xml:space="preserve">
    <value>透明度を維持したままウィンドウをキャプチャする</value>
  </data>
  <data name="cbClipboardUploadAutoIndexFolder.Text" xml:space="preserve">
    <value>クリップボードにフォルダのパスが含まれている場合、フォルダのインデックスを作成し、そのインデックスをアップロードする</value>
  </data>
  <data name="cbClipboardUploadShareURL.Text" xml:space="preserve">
    <value>クリップボードにURLが含まれている場合、URL共有サービスを利用して共有する</value>
  </data>
  <data name="cbClipboardUploadShortenURL.Text" xml:space="preserve">
    <value>クリップボードにURLが含まれている場合、URL短縮サービスを利用する</value>
  </data>
  <data name="cbFileUploadUseNamePattern.Text" xml:space="preserve">
    <value>ファイルをアップロードする際にも、実際のファイル名の代わりに名前のパターンを使用する</value>
  </data>
  <data name="cbHistorySave.Text" xml:space="preserve">
    <value>タスク情報を履歴に保存する</value>
  </data>
  <data name="cbImageEffectOnlyRegionCapture.Text" xml:space="preserve">
    <value>範囲キャプチャ時のみ効果を適用する</value>
  </data>
  <data name="cbNameFormatCustomTimeZone.Text" xml:space="preserve">
    <value>他の時間帯の使用:</value>
  </data>
  <data name="cbPlaySoundAfterCapture.Text" xml:space="preserve">
    <value>キャプチャ後にサウンドを再生する</value>
  </data>
  <data name="cbPlaySoundAfterUpload.Text" xml:space="preserve">
    <value>作業完了後にサウンドを再生する</value>
  </data>
  <data name="cbScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>指定時間だけキャプチャ:</value>
  </data>
  <data name="cbScreenshotDelay.Text" xml:space="preserve">
    <value>スクリーンショット遅延:</value>
  </data>
  <data name="cbShowAfterCaptureTasksForm.Text" xml:space="preserve">
    <value>キャプチャ後、「ファイルをどうするか」ウィンドウ表示する</value>
  </data>
  <data name="cbShowCursor.Text" xml:space="preserve">
    <value>スクリーンショットにカーソルを含める</value>
  </data>
  <data name="cbThumbnailIfSmaller.Text" xml:space="preserve">
    <value>画像のサイズがサムネイルサイズよりも大きい場合にのみサムネイルを作成する</value>
  </data>
  <data name="btnEncoderConfig.Text" xml:space="preserve">
    <value>プロファイル...</value>
  </data>
  <data name="cbUseDefaultAfterCaptureSettings.Text" xml:space="preserve">
    <value>デフォルトの「キャプチャ後」の設定を使用する</value>
  </data>
  <data name="cbUseDefaultAfterUploadSettings.Text" xml:space="preserve">
    <value>デフォルトの「アップロード後」の設定を使用する</value>
  </data>
  <data name="cbUseDefaultDestinationSettings.Text" xml:space="preserve">
    <value>デフォルトの「アップロード先」の設定を使用する</value>
  </data>
  <data name="cbWatchFolderEnabled.Text" xml:space="preserve">
    <value>フォルダを監視し、新しいファイルが作成されている場合アップロードする</value>
  </data>
  <data name="chActionsArgs.Text" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="chActionsExtensions.Text" xml:space="preserve">
    <value>拡張子</value>
  </data>
  <data name="chActionsName.Text" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="chActionsPath.Text" xml:space="preserve">
    <value>パス</value>
  </data>
  <data name="chkClipboardUploadURLContents.Text" xml:space="preserve">
    <value>クリップボードにファイルURLが含まれている場合、そのファイルをダウンロード後にアップロードする</value>
  </data>
  <data name="chkOverrideCustomUploader.Text" xml:space="preserve">
    <value>デフォルトのカスタムアップローダを上書き:</value>
  </data>
  <data name="chkOverrideFTP.Text" xml:space="preserve">
    <value>デフォルトのFTPアカウントを上書き:</value>
  </data>
  <data name="chkRunScreencastCLI.Text" xml:space="preserve">
    <value>キャプチャ後、CLIを実行:</value>
  </data>
  <data name="chkScreenRecordAutoStart.Text" xml:space="preserve">
    <value>指定時間後にキャプチャ:</value>
  </data>
  <data name="chkShowAfterUploadForm.Text" xml:space="preserve">
    <value>作業が完了後、「アップロード後の選択」ウィンドウを表示する</value>
  </data>
  <data name="chkShowBeforeUploadForm.Text" xml:space="preserve">
    <value>作業の開始時、「アップロード先の変更」ウィンドウを表示する</value>
  </data>
  <data name="chkShowImageEffectsWindowAfterCapture.Text" xml:space="preserve">
    <value>キャプチャ後、「画像効果」ウィンドウを表示する</value>
  </data>
  <data name="chkUseDefaultActions.Text" xml:space="preserve">
    <value>メインウィンドウのタスク設定でアクションを使用する</value>
  </data>
  <data name="chkUseDefaultAdvancedSettings.Text" xml:space="preserve">
    <value>メインウィンドウのタスク設定で詳細設定を使用する</value>
  </data>
  <data name="chkUseDefaultCaptureSettings.Text" xml:space="preserve">
    <value>メインウィンドウのタスク設定でキャプチャ設定を使用する</value>
  </data>
  <data name="chkUseDefaultGeneralSettings.Text" xml:space="preserve">
    <value>メインウィンドウのタスク設定で基本設定を使用する</value>
  </data>
  <data name="chkUseDefaultImageSettings.Text" xml:space="preserve">
    <value>メインウィンドウのタスク設定で画像設定を使用する</value>
  </data>
  <data name="chkUseDefaultIndexerSettings.Text" xml:space="preserve">
    <value>メインウィンドウのタスク設定でインデクサを使用する</value>
  </data>
  <data name="chkUseDefaultUploadSettings.Text" xml:space="preserve">
    <value>メインウィンドウのタスク設定でアップロード設定を使用する</value>
  </data>
  <data name="chWatchFolderFilter.Text" xml:space="preserve">
    <value>フィルタ</value>
  </data>
  <data name="chWatchFolderFolderPath.Text" xml:space="preserve">
    <value>フォルダパス</value>
  </data>
  <data name="chWatchFolderIncludeSubdirectories.Text" xml:space="preserve">
    <value>サブフォルダを含む</value>
  </data>
  <data name="lblAfterTaskNotification.Text" xml:space="preserve">
    <value>作業が完了した時:</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>説明:</value>
  </data>
  <data name="lblCaptureShadowOffset.Text" xml:space="preserve">
    <value>影のオフセット:</value>
  </data>
  <data name="lblGIFEncoding.Text" xml:space="preserve">
    <value>GIFのエンコーダ:</value>
  </data>
  <data name="lblGIFFPS.Text" xml:space="preserve">
    <value>GIFのFPS:</value>
  </data>
  <data name="lblImageFileExist.Text" xml:space="preserve">
    <value>ファイルが既に存在する場合:</value>
  </data>
  <data name="lblImageFormat.Text" xml:space="preserve">
    <value>画像形式:</value>
  </data>
  <data name="lblImageFormat2.Text" xml:space="preserve">
    <value>画像形式2:</value>
  </data>
  <data name="lblImageGIFQuality.Text" xml:space="preserve">
    <value>GIF品質:</value>
  </data>
  <data name="lblImageJPEGQuality.Text" xml:space="preserve">
    <value>JPEG品質:</value>
  </data>
  <data name="lblImageJPEGQualityHint.Text" xml:space="preserve">
    <value>0 - 100</value>
  </data>
  <data name="lblNameFormatPattern.Text" xml:space="preserve">
    <value>キャプチャやクリップボードのアップロード時、使用する名前の形式:</value>
  </data>
  <data name="lblNameFormatPatternActiveWindow.Text" xml:space="preserve">
    <value>アクティブウィンドウのキャプチャ時、使用する名前の形式:</value>
  </data>
  <data name="lblNameFormatPatternPreview.Text" xml:space="preserve">
    <value>プレビュー:</value>
  </data>
  <data name="lblNameFormatPatternPreviewActiveWindow.Text" xml:space="preserve">
    <value>プレビュー:</value>
  </data>
  <data name="lblScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="lblScreenRecorderStartDelay.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="lblScreenRecordFPS.Text" xml:space="preserve">
    <value>画面キャプチャ時のFPS:</value>
  </data>
  <data name="lblScreenshotDelayInfo.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="lblCaptureCustomRegionHeight.Text" xml:space="preserve">
    <value>高さ</value>
  </data>
  <data name="lblCaptureCustomRegionWidth.Text" xml:space="preserve">
    <value>幅</value>
  </data>
  <data name="lblThumbnailHeight.Text" xml:space="preserve">
    <value>高さ:</value>
  </data>
  <data name="lblThumbnailName.Text" xml:space="preserve">
    <value>サムネイル名:</value>
  </data>
  <data name="lblThumbnailNamePreview.Text" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="lblThumbnailWidth.Text" xml:space="preserve">
    <value>幅:</value>
  </data>
  <data name="lblUseImageFormat2After.Text" xml:space="preserve">
    <value>「画像形式2」で使用するサイズの制限:</value>
  </data>
  <data name="lblUseImageFormat2AfterHint.Text" xml:space="preserve">
    <value>kB  0 - 5000 (0は無効)</value>
  </data>
  <data name="tpActions.Text" xml:space="preserve">
    <value>アクション</value>
  </data>
  <data name="tpAdvanced.Text" xml:space="preserve">
    <value>詳細</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>キャプチャ</value>
  </data>
  <data name="tpEffects.Text" xml:space="preserve">
    <value>効果</value>
  </data>
  <data name="tpGeneral.Text" xml:space="preserve">
    <value>基本</value>
  </data>
  <data name="tpImage.Text" xml:space="preserve">
    <value>画像</value>
  </data>
  <data name="tpIndexer.Text" xml:space="preserve">
    <value>インデクサ</value>
  </data>
  <data name="tpRectangleAnnotate.Text" xml:space="preserve">
    <value>長方形 (注釈)</value>
  </data>
  <data name="tpRegionCapture.Text" xml:space="preserve">
    <value>範囲キャプチャ</value>
  </data>
  <data name="tpScreenRecorder.Text" xml:space="preserve">
    <value>スクリーンキャプチャ</value>
  </data>
  <data name="tpTask.Text" xml:space="preserve">
    <value>タスク</value>
  </data>
  <data name="tpThumbnail.Text" xml:space="preserve">
    <value>サムネイル</value>
  </data>
  <data name="tpUpload.Text" xml:space="preserve">
    <value>アップロード</value>
  </data>
  <data name="tpUploadClipboard.Text" xml:space="preserve">
    <value>クリップボードアップロード</value>
  </data>
  <data name="tpWatchFolders.Text" xml:space="preserve">
    <value>フォルダを見る</value>
  </data>
  <data name="tsmiFileUploaders.Text" xml:space="preserve">
    <value>ファイルアップローダ</value>
  </data>
  <data name="tsmiImageUploaders.Text" xml:space="preserve">
    <value>画像アップローダ</value>
  </data>
  <data name="tsmiTextUploaders.Text" xml:space="preserve">
    <value>テキストアップローダ</value>
  </data>
  <data name="tsmiURLSharingServices.Text" xml:space="preserve">
    <value>URL共有サービス</value>
  </data>
  <data name="tsmiURLShorteners.Text" xml:space="preserve">
    <value>URL短縮サービス</value>
  </data>
  <data name="lblCaptureCustomRegionSelectedMonitor.Text" xml:space="preserve">
    <value>カスタム範囲のモニターを選択します:</value>
  </data>
  <data name="lblImageEffectsNote.Text" xml:space="preserve">
    <value>画像効果は「キャプチャ作業後 -&gt; 画像効果の追加」でオン/オフすることができます。</value>
  </data>
</root>